<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
  <generator uri="https://www.chrismytton.com/">www.chrismytton.com</generator>
  <link href="https://www.chrismytton.com/index.xml" rel="self" type="application/atom+xml" />
  <link href="https://www.chrismytton.com/" rel="alternate" type="text/html" hreflang="en-gb" />
  <updated>2024-01-14T06:48:27+00:00</updated>
  <id>https://www.chrismytton.com/index.xml</id>
  <title type="html">Chris Mytton</title>
  <subtitle>This is my personal website where I share anything I find interesting. Follow me on Twitter: @chrismytton</subtitle>
  <author>
    <name>Chris Mytton</name>
  </author>
  
  <entry>
    <title type="html">Plain text websites</title>
    <link href="https://www.chrismytton.com/plain-text-websites/" rel="alternate" type="text/html" title="Plain text websites" />
    <published>2024-01-14T06:48:27+00:00</published>
    <updated>2024-01-14T06:48:27+00:00</updated>
    <id>https://www.chrismytton.com/plain-text-websites/</id>
    <content type="html" xml:base="https://www.chrismytton.com/plain-text-websites/">
      
&lt;p&gt;In a world of web apps, videos, social media and multi-media distraction it’s nice to know there are still some websites out there which use simple plain text.&lt;/p&gt;

&lt;p&gt;I came across &lt;a href=&quot;https://sjmulder.nl/en/textonly.html&quot;&gt;Sijmen J. Mulder’s list of Hyperlinked Text websites&lt;/a&gt; the other day, which is a list of websites that mostly use plain old HTML, and skip the JavaScript bloat that has become so common to the web these days.&lt;/p&gt;

&lt;p&gt;The sites on this page don’t have loads of adverts, or many images, they’re just simple plain text, and honestly it’s a pleasure reading them. They load fast and you can get straight to the content you’re after without scrolling past adverts and dismissing popups inviting you to provide your email address for dubious purposes.&lt;/p&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="writing" />
    
    <category term="programming" />
    
    <category term="minimalism" />
    
    <summary type="html">In a world of web apps, videos, social media and multi-media distraction it's nice to know there are still some websites out there which use simple plain text</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com/assets/images/plain-text-websites.jpg" />
    <media:content medium="image" url="https://www.chrismytton.com/assets/images/plain-text-websites.jpg"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Amazing space facts you might not know</title>
    <link href="https://www.chrismytton.com/space-facts/" rel="alternate" type="text/html" title="Amazing space facts you might not know" />
    <published>2024-01-04T17:43:57+00:00</published>
    <updated>2024-01-04T17:43:57+00:00</updated>
    <id>https://www.chrismytton.com/space-facts/</id>
    <content type="html" xml:base="https://www.chrismytton.com/space-facts/">
      
&lt;h2 id=&quot;the-surprising-effect-of-altitude-on-sunset-times&quot;&gt;The surprising effect of altitude on sunset times&lt;/h2&gt;

&lt;p&gt;If you have one observer at sea level, and another observer at 1000m above sea level, who will see the sun set first?&lt;/p&gt;

&lt;p&gt;Counterintuitively the observer at 1000m above sea level will see it set first, despite being higher up and therefore seeing further over the horizon. This is due to &lt;a href=&quot;https://en.wikipedia.org/wiki/Atmospheric_refraction&quot;&gt;atmospheric refraction&lt;/a&gt; being reduced at higher altitudes compared to sea level.&lt;/p&gt;

&lt;p&gt;Atmospheric refraction is like a cosmic optical illusion. As light from the sun travels through the Earth’s atmosphere, it bends, much like a straw appears to bend in a glass of water. This bending causes the sun to appear slightly higher in the sky than it actually is, delaying the moment of sunset for those at sea level.&lt;/p&gt;

&lt;p&gt;This also means that when the Sun’s disc touches the horizon it has actually already set, but you can still see it due to atmospheric refraction. If the atmosphere disappeared at that point then the sun would also disappear!&lt;/p&gt;

&lt;h2 id=&quot;earth-spins-more-than-360-in-a-day&quot;&gt;Earth spins more than 360º in a day&lt;/h2&gt;

&lt;p&gt;How many degrees does earth spin in 24 hours?&lt;/p&gt;

&lt;p&gt;Without thinking too hard about it I probably would have said 360º, but that’s wrong!&lt;/p&gt;

&lt;p&gt;Relative to the stars, Earth actually spins 361º in 24 hours. This is because we’re orbiting the sun, so after spinning 360º we’ve travelled a bit further around the sun, so have to spin an extra 1º to get the sun back to the same point in the sky.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Sidereal_Day_poster.png#/media/File:Sidereal_Day_poster.png&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/8b/Sidereal_Day_poster.png&quot; alt=&quot;A sidereal day is 1 Earth rotation relative to the stars; a solar day is 1 Earth rotation relative to the Sun. The Earth rotates 366 times per &#39;normal&#39; 365-day year relative to the stars, so Earth&#39;s sidereal day is 4 minutes shorter than Earth&#39;s solar day.&quot; height=&quot;1200&quot; width=&quot;1920&quot; class=&quot;not-prose&quot; /&gt;&lt;/a&gt;&lt;small&gt;Image by James O&#39;Donoghue, &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0&quot; title=&quot;Creative Commons Attribution 3.0&quot;&gt;CC BY 3.0&lt;/a&gt;, &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=132008436&quot;&gt;Link&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Related to that, in a “normal” 365 day year, how many full turns do you think the earth makes?&lt;/p&gt;

&lt;p&gt;The earth actually makes 366 full turns (relative to the stars) in a 365 day year.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sidereal_time&quot;&gt;Sidereal time Wikipedia entry&lt;/a&gt; for a more in-depth explanation of this.&lt;/p&gt;

&lt;h2 id=&quot;venus-spins-differently-from-other-planets&quot;&gt;Venus spins differently from other planets&lt;/h2&gt;

&lt;p&gt;Most planets rotate on their axes in an anticlockwise direction as viewed from Earth’s north pole, but Venus rotates clockwise.&lt;/p&gt;

&lt;p&gt;This means that Venus is actually spinning “backwards” compared with most&lt;sup id=&quot;fnref:other-backwards-spinning-planets&quot;&gt;&lt;a href=&quot;#fn:other-backwards-spinning-planets&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot; role=&quot;doc-noteref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; other planets in the solar system.&lt;/p&gt;

&lt;p&gt;Venus also spins very slowly, which means a sidereal day on Venus (sidereal meaning the time it takes to rotate 360º relative to the stars, 243 Earth days) is longer than a year on Venus (225 Earth days).&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:other-backwards-spinning-planets&quot;&gt;
      &lt;p&gt;Uranus is the other planet that spins backwards. For added fun it also spins on its side, with an axial tilt of approximately 90º. &lt;a href=&quot;#fnref:other-backwards-spinning-planets&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="space" />
    
    <summary type="html">Learn why sunsets happen earlier at high altitudes, the surprising truth about Earth's daily rotation, and Venus's unique, backward spin.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com/assets/images/space-facts.jpg" />
    <media:content medium="image" url="https://www.chrismytton.com/assets/images/space-facts.jpg"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">How to query CSVs with SQLite</title>
    <link href="https://www.chrismytton.com/how-to-query-csvs-with-sqlite/" rel="alternate" type="text/html" title="How to query CSVs with SQLite" />
    <published>2023-01-23T19:00:00+00:00</published>
    <updated>2023-01-23T19:00:00+00:00</updated>
    <id>https://www.chrismytton.com/how-to-query-csvs-with-sqlite/</id>
    <content type="html" xml:base="https://www.chrismytton.com/how-to-query-csvs-with-sqlite/">
      
&lt;p&gt;I’ve got the following shell function in my shell startup file that allows me to quickly query a CSV file with SQL:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cq&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;csv_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;:?Usage:&lt;span class=&quot;p&quot;&gt; cq &amp;lt;csv_file&amp;gt; [&amp;lt;table&amp;gt; [&amp;lt;sql&amp;gt;]]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-interactive&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  sqlite3 :memory: &lt;span class=&quot;nt&quot;&gt;-header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-csv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cmd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.import &#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$csv_file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$table&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sql&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I can’t claim to have written this function. I found it on &lt;a href=&quot;https://github.com/multiprocessio/dsq/issues/70#issuecomment-1162584448&quot;&gt;this GitHub issue thread&lt;/a&gt;. I’ve just tweaked it a little to add an optional SQL query argument, and used some more standard SQLite parameters.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;First argument is the CSV file to query. Second argument is the name of the table to create in the SQLite database. Third argument is the SQL query to run. If you don’t specify a query then you’ll be dropped into an interactive SQLite shell.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cq &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  vax &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;SELECT location, date, total_vaccinations FROM vax WHERE location = &#39;United Kingdom&#39; ORDER BY date DESC LIMIT 10;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;alternatives&quot;&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;If you’re looking for something a bit more powerful then there are dozens of tools out there that allow you to query CSV files. Here are a few of the popular ones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/multiprocessio/dsq&quot;&gt;dsq&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://harelba.github.io/q/&quot;&gt;q&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dinedal/textql&quot;&gt;textql&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/simonw/sqlite-utils&quot;&gt;sqlite-utils&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="sqlite" />
    
    <category term="csv" />
    
    <category term="shell" />
    
    <summary type="html">A simple shell function to query CSV files using SQLite</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com" />
    <media:content medium="image" url="https://www.chrismytton.com"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">What land and assets does Cheltenham Council own?</title>
    <link href="https://www.chrismytton.com/what-land-and-assets-does-cheltenham-council-own/" rel="alternate" type="text/html" title="What land and assets does Cheltenham Council own?" />
    <published>2023-01-18T22:00:00+00:00</published>
    <updated>2023-01-18T22:00:00+00:00</updated>
    <id>https://www.chrismytton.com/what-land-and-assets-does-cheltenham-council-own/</id>
    <content type="html" xml:base="https://www.chrismytton.com/what-land-and-assets-does-cheltenham-council-own/">
      
&lt;h2 id=&quot;summary-i-made-a-map-of-the-councils-assets&quot;&gt;Summary: I made a map of the council’s assets&lt;/h2&gt;

&lt;p&gt;I made a map showing all land and assets owned by Cheltenham Borough Council&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot; role=&quot;doc-noteref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;iframe src=&quot;https://www.chrismytton.com/cheltenham-council-land-and-assets/&quot; style=&quot;width: 100%; height: 600px; border: none;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can view it in fullscreen at &lt;a href=&quot;https://www.chrismytton.com/cheltenham-council-land-and-assets/&quot;&gt;chrismytton.com/cheltenham-council-land-and-assets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Getting to that point was a fun learning process, and as a bonus I ended up with a free web interface where you can query the data as well!
More details on that below.&lt;/p&gt;

&lt;h2 id=&quot;data-but-not-very-visual&quot;&gt;Data! But not very visual&lt;/h2&gt;

&lt;p&gt;I was browsing through &lt;a href=&quot;https://www.cheltenham.gov.uk/opendata&quot;&gt;Cheltenham Council’s Open data pages&lt;/a&gt; the other day and came across their &lt;a href=&quot;https://www.cheltenham.gov.uk/info/16/open_data/1190/local_authority_land_and_assets&quot;&gt;“Local authority land and assets open data”&lt;/a&gt; dataset. From what I understand reading that webpage, the council are required to maintain this list of assets, “in accordance with the mandatory requirements of the local government transparency code”.&lt;/p&gt;

&lt;p&gt;The list of assets is provided in XLSX and CSV format. These spreadsheet-like formats are fine to quickly go through if you know what you’re looking for. Not so great for browsing the data in a more visual format.&lt;/p&gt;

&lt;p&gt;I’ve been wanting to sharpen my GIS skills for a while, so I got to work processing the data into something that I could plot on a map.&lt;/p&gt;

&lt;h2 id=&quot;loading-the-data-into-postgis-with-ruby&quot;&gt;Loading the data into Postgis with Ruby&lt;/h2&gt;

&lt;p&gt;For my first iteration I wanted to use Postgis so I could get more familiar with the various features it offers. I wrote a Ruby script that would take the CSV data, do some mild cleaning on it, load it into Postgis, and then get the data back out of Postgis as GeoJSON.&lt;/p&gt;

&lt;p&gt;You can see that script &lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/fd24990/load_csv_and_output_geojson.rb&quot;&gt;over on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;re-projecting-british-national-grid-coordinates-to-gps-coordinates&quot;&gt;Re-projecting British National Grid coordinates to “GPS” coordinates&lt;/h2&gt;

&lt;p&gt;The coordinates from the CSV’s &lt;code&gt;GeoX&lt;/code&gt; and &lt;code&gt;GeoY&lt;/code&gt; columns are re-projected in Postgis from EPSG:27700 (British National Grid, which is used on Ordnance Survey maps) to EPSG:4326 (World Geodetic System, which is what GPS uses), which is then stored in the &lt;code&gt;coordinates&lt;/code&gt; column. Re-projection isn’t a required step. GeoJSON can handle data with a 27700 projection, and Leaflet can handle 27700 projections, but it requires a 27700 basemap as well. I could get from Ordnance Survey, but it costs money, and I wanted this project to run without an ongoing cost, if possible.&lt;/p&gt;

&lt;p&gt;In my experience, working with 4326 data gives you a wider range of options.&lt;/p&gt;

&lt;p&gt;This is the SQL I used to re-project the &lt;code&gt;GeoX&lt;/code&gt; and &lt;code&gt;GeoY&lt;/code&gt; columns and store the result in the &lt;code&gt;coordinates&lt;/code&gt; column.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;land_and_assets&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coordinates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ST_Transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ST_SetSRID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ST_MakePoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GeoX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GeoY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;27700&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;4326&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sql-query-to-get-geojson-out-of-postgis&quot;&gt;SQL query to get GeoJSON out of Postgis&lt;/h2&gt;

&lt;p&gt;The other thing of note is that I used a fancy Postgis query to get the GeoJSON directly from the database, rather than having to generate it with Ruby.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_build_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&#39;FeatureCollection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;features&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geojson&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_build_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;s1&quot;&gt;&#39;Feature&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;AssetCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;geometry&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;ST_AsGeoJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;properties&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_build_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;organisation&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;organisationlabel&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisationlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;uprn&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uprn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;assetcode&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assetcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;propertyname&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;streetname&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streetname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;posttown&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posttown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;postcode&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;tenuretype&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tenuretype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;tenuredetail&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tenuredetail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&#39;holdingtype&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;holdingtype&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;land_and_assets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pretty cool that you can conjure up a GeoJSON object using SQL without any further processing.&lt;/p&gt;

&lt;p&gt;So this Ruby script worked fine and produced some usable GeoJSON output. You can actually &lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/fd24990e0bbfd9e90d42a0797b6b770e2c63665b/land_and_assets_2021.geojson&quot;&gt;view the output directly on GitHub&lt;/a&gt; (because GitHub has support for rendering GeoJSON files).&lt;/p&gt;

&lt;h2 id=&quot;second-attempt-with-gdalogr&quot;&gt;Second attempt with GDAL/OGR&lt;/h2&gt;

&lt;p&gt;A few weeks later I was working on another project and started to get a deeper understanding and appreciation for the power of &lt;code&gt;ogr2ogr&lt;/code&gt; from the GDAL/OGR package. From what I understand GDAL handles raster data, which is essentially geographically-labelled image-type data. OGR handles vector data, which is essentially some kind of coordinates representing points, lines, polygons (and potentially more) in a 2d or 3d space.&lt;/p&gt;

&lt;p&gt;This tool allows you to convert between a wide range of vector GIS formats. Among those formats, to my surprise, was CSV! So you can use &lt;code&gt;ogr2ogr&lt;/code&gt; to convert a CSV file to GeoJSON directly, without having to load things into Postgres as an intermediate step.&lt;/p&gt;

&lt;p&gt;Because &lt;code&gt;ogr2ogr&lt;/code&gt; lets you write SQL, we can use this for processing the rows in the input dataset into a format appropriate for the output dataset. In this case replacing some line breaks in a couple of fields, and remapping the names from the CSV to different output names.&lt;/p&gt;

&lt;p&gt;You can see the new build script &lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/71d9529327807af23cd750f65e88dc496867c155/bin/build&quot;&gt;over on GitHub&lt;/a&gt; along with the &lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/main/extract_csv_to_ogr.sql&quot;&gt;SQL that’s used for processing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Moving from the Ruby script to &lt;code&gt;ogr2ogr&lt;/code&gt; has dramatically reduced the amount of code needed for this process. Now it’s just one (admittedly quite complex) SQL query and a couple of lines of bash to glue things together.&lt;/p&gt;

&lt;h2 id=&quot;putting-it-on-a-map&quot;&gt;Putting it on a map&lt;/h2&gt;

&lt;p&gt;As mentioned GitHub has built in support for viewing GeoJSON files. This used to be powered by Mapbox and was quite slick, but it’s now powered by Azure Maps and is quite frankly inferior to the Mapbox version and a bit clunky.&lt;/p&gt;

&lt;p&gt;So I wanted to put the markers on a map that I controlled.&lt;/p&gt;

&lt;p&gt;The GeoJSON file was acceptably small once gzipped, so I was happy to just pull in the whole file on page load, rather than having to do any dynamic bounding box queries.&lt;/p&gt;

&lt;p&gt;I used Leaflet to display the map, and OpenStreetMap’s tile server for the base map.&lt;/p&gt;

&lt;p&gt;You can browse the map by visiting &lt;a href=&quot;https://www.chrismytton.com/cheltenham-council-land-and-assets/&quot;&gt;chrismytton.com/cheltenham-council-land-and-assets&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;exploring-the-data-with-datasette&quot;&gt;Exploring the data with Datasette&lt;/h2&gt;

&lt;p&gt;Browsing the data visually on the map was the main goal for me, but I still found myself wanting to run some SQL queries on this data.
I wanted to know what the distinct values were in the “Tenure” column.
I wanted to know what kind of holdings there were.
These are things that would be trivial to answer using SQL.&lt;/p&gt;

&lt;p&gt;I could have just used &lt;code&gt;ogr2ogr&lt;/code&gt;’s built-in SQL to query the data, but this is a bit clunky because it’s designed specifically for looking at geodata.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&quot;https://datasette.io/&quot;&gt;Datasette&lt;/a&gt;. Specifically &lt;a href=&quot;https://lite.datasette.io/&quot;&gt;Datasette Lite&lt;/a&gt;, which allows you to load in a CSV file from a URL and run SQL against it.&lt;/p&gt;

&lt;p&gt;In this case there was some kind of encoding issue with the CSV file which meant it couldn’t be loaded by Datasette Lite directly.
One way to work around this was to convert the CSV to a SQLite database and fix the encodings along the way.&lt;/p&gt;

&lt;p&gt;Because I was now using &lt;code&gt;org2ogr&lt;/code&gt;, I had everything I needed to convert the CSV data into a multitude of other vector data formats.
A simple &lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets/compare/2031fb3...066e170&quot;&gt;one line addition&lt;/a&gt; to the &lt;code&gt;bin/build&lt;/code&gt; script was all it took to output a SQLite database alongside the GeoJSON.&lt;/p&gt;

&lt;p&gt;With that change in place it’s now possible to &lt;a href=&quot;https://lite.datasette.io/?url=https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/bdf8976e4ba25a6a35174e0597ab3723c47682eb/cheltenham_council_land_and_assets_2021.sqlite&quot;&gt;query the data using SQL via Datasette Lite’s web interface&lt;/a&gt;, without having to download anything to your computer.&lt;/p&gt;

&lt;h2 id=&quot;future-enhancements&quot;&gt;Future enhancements&lt;/h2&gt;

&lt;p&gt;This has definitely been a learning experience! This process follows the classic ETL (Extract, Transform, Load) pattern, but using tools that are specifically designed for geodata. While I’m pleased with how things are working there are definitely some things I’d like to improve.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have a simpler base map than the OpenStreetMap one, which can look a bit cluttered at times&lt;/li&gt;
  &lt;li&gt;Switch to using Maplibre. It’s fast, it’s fun, and having used Mapbox for a while it’s familiar. It also offers smoother zooming, built-in hash-tracking on location change, as well as changing bearing and angle.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.chrismytton.com/cheltenham-council-land-and-assets/&quot;&gt;Full-screen version of the map&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrismytton/cheltenham-council-land-and-assets&quot;&gt;GitHub repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cheltenham.gov.uk/info/16/open_data/1190/local_authority_land_and_assets&quot;&gt;Original data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lite.datasette.io/?url=https://github.com/chrismytton/cheltenham-council-land-and-assets/blob/bdf8976/cheltenham_council_land_and_assets_2021.sqlite&quot;&gt;Datasette Lite interface for querying data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Well, all the land and assets they are legally required to declare, at least. Some things like operational railways, canals and highways, as well as “assets of national security” are excluded from this list. For more details see the &lt;a href=&quot;https://www.gov.uk/government/publications/local-government-transparency-code-2015/local-government-transparency-code-2015#local-authority-land&quot;&gt;“Local authority land” section of the Local government transparency code 2015&lt;/a&gt;. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="programming" />
    
    <category term="society" />
    
    <category term="opendata" />
    
    <summary type="html">Or how I turned a CSV into a map and a database.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com/assets/images/cheltenham-data-screenshot.png" />
    <media:content medium="image" url="https://www.chrismytton.com/assets/images/cheltenham-data-screenshot.png"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Book notes: A Guide to the Good Life</title>
    <link href="https://www.chrismytton.com/a-guide-to-the-good-life/" rel="alternate" type="text/html" title="Book notes: A Guide to the Good Life" />
    <published>2020-11-02T18:00:00+00:00</published>
    <updated>2020-11-02T18:00:00+00:00</updated>
    <id>https://www.chrismytton.com/a-guide-to-the-good-life/</id>
    <content type="html" xml:base="https://www.chrismytton.com/a-guide-to-the-good-life/">
      
&lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: A Guide to the Good Life: The Ancient Art of Stoic Joy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Author&lt;/strong&gt;: William B. Irvine&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: 9/10&lt;/p&gt;

&lt;p&gt;I read this book a few years ago and have found that following the concepts in it have genuinely helped me to live a more tranquil life.&lt;/p&gt;

&lt;p&gt;Read this book if you’re finding the world a bit overwhelming and want to live a more purposeful and fulfilling life, rather than a life of mindless consumption.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;a-practical-guide-to-modern-stoicism&quot;&gt;A practical guide to modern Stoicism.&lt;/h2&gt;

&lt;p&gt;Stoicism is a life philosophy that can help you lead a more tranquil and joyous life.&lt;/p&gt;

&lt;p&gt;If you embrace the form of Stoicism this book teaches then, according to Seneca (an ancient Stoic), you will “be attended by a constant cheerfulness and a joy that is deep and issues from deep within”.&lt;/p&gt;

&lt;h2 id=&quot;relation-to-zen-buddhism&quot;&gt;Relation to Zen Buddhism&lt;/h2&gt;

&lt;p&gt;Stoicism has some things in common with Zen Buddhism.&lt;/p&gt;

&lt;p&gt;Both of these philosophies emphasise the transitory nature of the world and the importance of mastering desire.&lt;/p&gt;

&lt;p&gt;They also both have tranquility as the ultimate goal and teach us how to get it.&lt;/p&gt;

&lt;h2 id=&quot;stoic-psychological-techniques&quot;&gt;Stoic psychological techniques&lt;/h2&gt;

&lt;p&gt;The Stoics developed certain techniques to help them achieve the goal of tranquility.&lt;/p&gt;

&lt;h3 id=&quot;negative-visualisation&quot;&gt;Negative visualisation&lt;/h3&gt;

&lt;p&gt;Reflect on the bad things that could happen to you or your loved ones. It makes you grateful for what you have and makes your joy more durable when you are hit by misfortune.&lt;/p&gt;

&lt;p&gt;Think about things that make you sad or angry from other people’s perspective.&lt;/p&gt;

&lt;h3 id=&quot;the-dichotomy-trichotomy-of-control&quot;&gt;The Dichotomy (trichotomy) of control&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Things we have complete control over, e.g. goals and values&lt;/li&gt;
  &lt;li&gt;Things we have no control over, e.g. the weather, the news&lt;/li&gt;
  &lt;li&gt;Things we have some control over, e.g. whether we win at tennis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t worry about things you have no control over.&lt;/p&gt;

&lt;p&gt;Focus on things you have complete control over.&lt;/p&gt;

&lt;p&gt;When it comes to things you have some control over make sure you’re careful setting goals.&lt;/p&gt;

&lt;p&gt;Rather than setting the goal of winning the tennis match set the goal of playing to the best of your ability, then be pleasantly surprised if you win.&lt;/p&gt;

&lt;h3 id=&quot;fatalism&quot;&gt;Fatalism&lt;/h3&gt;

&lt;p&gt;Let go of the past and the present, they are what fate intended. Focus on the future, which you can control.&lt;/p&gt;

&lt;p&gt;This links back to the dichotomy of control. You can’t control the past and present (you can act on the present, but that’s a plan for the future), so don’t spend time worrying about them.&lt;/p&gt;

&lt;h3 id=&quot;self-denial&quot;&gt;Self denial&lt;/h3&gt;

&lt;p&gt;Embrace voluntary discomfort occasionally.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Underdress for the weather&lt;/li&gt;
  &lt;li&gt;Eat basic food without herbs and spices&lt;/li&gt;
  &lt;li&gt;Sleep somewhere uncomfortable&lt;/li&gt;
  &lt;li&gt;Have black tea or coffee&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try and forego opportunities to experience pleasure, they will numb you to it and then you will always need the pleasure to feel tranquil.&lt;/p&gt;

&lt;p&gt;By having more discomfort and less pleasure in our lives we widen our comfort zone and learn to appreciate the simpler things in life.&lt;/p&gt;

&lt;h3 id=&quot;meditation---watching-ourselves-practicing-stoicism&quot;&gt;Meditation - Watching ourselves practicing Stoicism&lt;/h3&gt;

&lt;p&gt;Write down the days events and how we should have responded to them according to Stoic principles.&lt;/p&gt;

&lt;p&gt;Think about the parts where you succeeded and successfully practiced Stoicism.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Are you practicing negative visualisation?&lt;/li&gt;
  &lt;li&gt;Are you distinguishing between things you fully control, partly control and don’t control?&lt;/li&gt;
  &lt;li&gt;Are you internalising your goals?&lt;/li&gt;
  &lt;li&gt;Are you dwelling on the past instead of focussing on the future?&lt;/li&gt;
  &lt;li&gt;Are you practicing self-denial?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stoic-advice&quot;&gt;Stoic Advice&lt;/h2&gt;

&lt;h3 id=&quot;duty---on-loving-mankind&quot;&gt;Duty - on loving mankind&lt;/h3&gt;

&lt;p&gt;Do your duty not through fear of punishment but prospect of reward.&lt;/p&gt;

&lt;h3 id=&quot;social-relations---on-dealing-with-other-people&quot;&gt;Social relations - on dealing with other people&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Form your character in private and remain true to it around others&lt;/li&gt;
  &lt;li&gt;Avoid people with vices you don’t want to pick up&lt;/li&gt;
  &lt;li&gt;Avoid people that are whiny&lt;/li&gt;
  &lt;li&gt;Be selective about the social functions you attend&lt;/li&gt;
  &lt;li&gt;When interacting with annoying people, bear in mind that others find you annoying, too&lt;/li&gt;
  &lt;li&gt;Don’t worry about what others say, think, or do&lt;/li&gt;
  &lt;li&gt;Social fatalism: people are the way they are, try to accept them as they are but also try to gently improve them&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;insults---on-putting-up-with-put-downs&quot;&gt;Insults - on putting up with put downs&lt;/h3&gt;

&lt;p&gt;Pause and consider if what the insulter said is true. If it is then no reason to be upset.&lt;/p&gt;

&lt;p&gt;Consider how well informed the insulter is. If you respect the source they are likely trying to help you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Consider the source of insults&lt;/li&gt;
  &lt;li&gt;We are the source of the sting of an insult&lt;/li&gt;
  &lt;li&gt;We get upset because of our judgement of “things”&lt;/li&gt;
  &lt;li&gt;Counter the insult with humour or silence&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;grief---on-vanquishing-tears-with-reason&quot;&gt;Grief - on vanquishing tears with reason&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Grieve enough to avoid indifference, but not so much that you tend towards madness&lt;/li&gt;
  &lt;li&gt;Negative visualisation will help remove some of the shock we experience&lt;/li&gt;
  &lt;li&gt;Retrospective negative visualisation - visualise the past without the person you are grieving and be thankful for the time you had with them&lt;/li&gt;
  &lt;li&gt;Use reason to make sense of a situation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;anger---on-overcoming-anti-joy&quot;&gt;Anger - on overcoming anti-joy&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Being angry is a waste of precious time&lt;/li&gt;
  &lt;li&gt;Don’t jump to conclusions about people’s motivations&lt;/li&gt;
  &lt;li&gt;Too much pleasure and not enough self-denial will make us quick to anger&lt;/li&gt;
  &lt;li&gt;Things that anger us generally don’t do us harm, they are just annoying&lt;/li&gt;
  &lt;li&gt;Humour can prevent us from becoming angry&lt;/li&gt;
  &lt;li&gt;Contemplate the impermanence of the world, this will put the thing that made you angry into perspective&lt;/li&gt;
  &lt;li&gt;When we feel ourselves getting angry, pause to consider the cosmic (in)significance of it&lt;/li&gt;
  &lt;li&gt;Remind ourselves that our behaviour angers others&lt;/li&gt;
  &lt;li&gt;When angry, force ourselves to relax our face, soften our voice and slow our pace of walking&lt;/li&gt;
  &lt;li&gt;If we are unable to control our anger and lash out then we should immediately apologise so that we can return to calm and not obsess over the thing that made us angry&lt;/li&gt;
  &lt;li&gt;Why experience anti-joy when you can experience joy?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;personal-values---on-seeking-fame&quot;&gt;Personal values - on seeking fame&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Remain indifferent to social status&lt;/li&gt;
  &lt;li&gt;Stoics value their freedom and are reluctant to do anything that gives others power over them&lt;/li&gt;
  &lt;li&gt;Be indifferent to what other people think so you can keep your freedom&lt;/li&gt;
  &lt;li&gt;Ignoring what people think of us is another form of not worrying about things we can’t control&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;personal-values---on-luxurious-living&quot;&gt;Personal values - on luxurious living&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Too much luxury makes it harder to appreciate simple things&lt;/li&gt;
  &lt;li&gt;Avoid becoming a connoisseur, it will diminish your ability to delight in simple things&lt;/li&gt;
&lt;/ul&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="books" />
    
    <category term="life" />
    
    <summary type="html">The Ancient Art of Stoic Joy.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com" />
    <media:content medium="image" url="https://www.chrismytton.com"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Be prolific</title>
    <link href="https://www.chrismytton.com/be-prolific/" rel="alternate" type="text/html" title="Be prolific" />
    <published>2020-10-22T18:17:00+00:00</published>
    <updated>2020-10-22T18:17:00+00:00</updated>
    <id>https://www.chrismytton.com/be-prolific/</id>
    <content type="html" xml:base="https://www.chrismytton.com/be-prolific/">
      
&lt;p&gt;There’s a story about an art teacher that split their class in half. They told one half of the students that they’d be graded based on a single piece of work, and the other half that they would be graded on the quantity of work produced.&lt;/p&gt;

&lt;p&gt;The half that was being graded on quantity ended up producing higher quality pieces.&lt;/p&gt;

&lt;p&gt;By iterating and learning from their mistakes they actually ended up producing better work than the students that only had to produce one piece.&lt;/p&gt;

&lt;p&gt;Quantity leads to quality.&lt;/p&gt;

&lt;h2 id=&quot;share-your-work&quot;&gt;Share your work&lt;/h2&gt;

&lt;p&gt;Sharing work helps you to think and develop. The feedback you get feeds into the next iteration.&lt;/p&gt;

&lt;p&gt;If you’ve enjoyed creating something then there’s a good chance that at least a handful of people in the world will enjoy seeing it or hearing about it.&lt;/p&gt;

&lt;p&gt;Promoting yourself and your work can be a good way to clarify your thinking and future direction.&lt;/p&gt;

&lt;h2 id=&quot;get-better-by-creating-more&quot;&gt;Get better by creating more&lt;/h2&gt;

&lt;p&gt;Produce lots of stuff and share it.&lt;/p&gt;

&lt;p&gt;Being prolific doesn’t mean that everything you produce has to be absolute gold. But the process of producing large quantities of work ultimately leads to a higher quality of work.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=24866706&quot; target=&quot;_blank&quot;&gt;Discussion on Hacker News&lt;/a&gt;.&lt;/p&gt;

&lt;!--

[Portuguese translation](https://eduardoorige.com.br/posts/seja-prolifico/index.html){:target=&quot;_blank&quot;}

[Arabic translation](https://farzat.online/2020/10/28/be-prolific/){:target=&quot;_blank&quot;}

--&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="creativity" />
    
    <category term="life" />
    
    <summary type="html">Produce lots of stuff and share it.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com" />
    <media:content medium="image" url="https://www.chrismytton.com"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Ruby: The not so good parts</title>
    <link href="https://www.chrismytton.com/ruby-the-not-so-good-parts/" rel="alternate" type="text/html" title="Ruby: The not so good parts" />
    <published>2020-10-11T09:28:00+00:00</published>
    <updated>2020-10-11T09:28:00+00:00</updated>
    <id>https://www.chrismytton.com/ruby-the-not-so-good-parts/</id>
    <content type="html" xml:base="https://www.chrismytton.com/ruby-the-not-so-good-parts/">
      
&lt;!-- Twitter embed JavaScript --&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;The other day Nate Berkopec asked this question on Twitter:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What is your least favorite part about Ruby?&lt;/p&gt;&amp;mdash; Nate Berkopec (@nateberkopec) &lt;a href=&quot;https://twitter.com/nateberkopec/status/1314235606705340418?ref_src=twsrc%5Etfw&quot;&gt;October 8, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;The thread had some thought provoking responses. I wanted to gather up some of the highlights for posterity and add my own commentary.&lt;/p&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#class-variables-are-confusing&quot; id=&quot;markdown-toc-class-variables-are-confusing&quot;&gt;Class variables are confusing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#standard-library-is-too-low-level&quot; id=&quot;markdown-toc-standard-library-is-too-low-level&quot;&gt;Standard library is too low-level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#meta-programming-complexity&quot; id=&quot;markdown-toc-meta-programming-complexity&quot;&gt;Meta-programming complexity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#block-vs-proc-vs-lambda&quot; id=&quot;markdown-toc-block-vs-proc-vs-lambda&quot;&gt;Block vs proc vs lambda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;class-variables-are-confusing&quot;&gt;Class variables are confusing&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;class variables! I can never figure out how they work&lt;/p&gt;&amp;mdash; Aaron Patterson (@tenderlove) &lt;a href=&quot;https://twitter.com/tenderlove/status/1314237029878652928?ref_src=twsrc%5Etfw&quot;&gt;October 8, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Class variables in Ruby look a bit like instance variables, but they begin with &lt;code&gt;@@&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To confuse matters further Ruby also has class instance variables, which makes searching for documentation confusing if you don’t know what you’re looking for.&lt;/p&gt;

&lt;p&gt;This is one of those Ruby features that’s best left alone unless you have a &lt;em&gt;very&lt;/em&gt; convincing use case that you can’t &lt;em&gt;possibly&lt;/em&gt; solve using anything else.&lt;/p&gt;

&lt;h2 id=&quot;standard-library-is-too-low-level&quot;&gt;Standard library is too low-level&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Much of the standard library is too low-level, like Net::HTTP, which leads to every Rails app bundling five different third-party HTTP clients.&lt;/p&gt;&amp;mdash; George Claghorn (@georgeclaghorn) &lt;a href=&quot;https://twitter.com/georgeclaghorn/status/1314237870782251008?ref_src=twsrc%5Etfw&quot;&gt;October 8, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Ruby is definitely showing its age a bit with the standard library. With Ruby 3.0 the standard library is going to become default gems. That might encourage some modernization in the interfaces provided so that more apps can rely on an out-of-the-box solution, rather than bundling their own.&lt;/p&gt;

&lt;p&gt;Choice is a good thing. The fact that there are many alternatives to most parts of the standard library is a sign of a healthy ecosystem. But at the same time it would be nice if the libraries Ruby shipped with were good enough for simple scripts without having to pull in external libraries.&lt;/p&gt;

&lt;p&gt;For simple HTTP requests when you don’t care about anything other than the body you can always use &lt;code&gt;open-uri&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;open-uri&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For anything more complex, you’ll want to turn to a third-party library.&lt;/p&gt;

&lt;h2 id=&quot;meta-programming-complexity&quot;&gt;Meta-programming complexity&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Meta-programming magic.&lt;br /&gt;&lt;br /&gt;Makes it awkward to discover where a called method is actually defined. Particularly frustrating for people just learning Ruby.&lt;br /&gt;&lt;br /&gt;Hopefully tools like sorbet and rbs will help solve the discovery problem to some extent.&lt;/p&gt;&amp;mdash; Chris Mytton (@chrismytton) &lt;a href=&quot;https://twitter.com/chrismytton/status/1314236518790311936?ref_src=twsrc%5Etfw&quot;&gt;October 8, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;My own contribution to the thread.&lt;/p&gt;

&lt;p&gt;Ruby has some incredibly powerful and ergonomic metaprogramming features for creating DSLs. Yet this power and ease-of-use leads people to overuse and abuse metaprogramming, leading to hard-to-follow and hard-to-debug programs.&lt;/p&gt;

&lt;p&gt;It seems enticing writing a DSL that captures the essence of the problem you’re solving. In reality code that isn’t written in a standard way (i.e. with classes and methods) is harder to understand because you have to understand the DSL before you can understand what the code in the DSL is doing.&lt;/p&gt;

&lt;h2 id=&quot;block-vs-proc-vs-lambda&quot;&gt;Block vs proc vs lambda&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Block vs proc vs lambda is one of the least elegant bits with the most complexity compared to expressiveness.&lt;/p&gt;&amp;mdash; Noah Gibbs (@codefolio) &lt;a href=&quot;https://twitter.com/codefolio/status/1314237138393858050?ref_src=twsrc%5Etfw&quot;&gt;October 8, 2020&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;Ruby has too many ways of creating and calling code closures. There are some subtle differences between the various forms. When faced with a situation where I want to use them I can never remember what the trade-offs between them are.&lt;/p&gt;

&lt;p&gt;This isn’t an easy problem to solve, since there’s code out there using all the different forms. It’s one of those things that you get used to, but is a definite sharp edge for people that are new to the language.&lt;/p&gt;

&lt;h2 class=&quot;no_toc&quot; id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Ruby fared pretty well in this thread, considering it’s a 25 year old language. There are definitely some rough edges, but I still find it to be one of the quickest and most fun ways to go from idea to working code.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 class=&quot;no_toc&quot; id=&quot;im-starting-a-newsletter&quot;&gt;I’m starting a newsletter!&lt;/h2&gt;

&lt;p&gt;If you’ve enjoyed reading this post then you might also enjoy &lt;a href=&quot;/newsletter/&quot;&gt;my newsletter&lt;/a&gt;, where I’ll be writing about Ruby, software, tech and life.&lt;/p&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <summary type="html">Shining a light on the dark corners of Ruby.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com" />
    <media:content medium="image" url="https://www.chrismytton.com"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Consume less, produce more</title>
    <link href="https://www.chrismytton.com/2020/09/24/consume-less-produce-more/" rel="alternate" type="text/html" title="Consume less, produce more" />
    <published>2020-09-24T06:50:00+00:00</published>
    <updated>2020-09-24T06:50:00+00:00</updated>
    <id>https://www.chrismytton.com/2020/09/24/consume-less-produce-more/</id>
    <content type="html" xml:base="https://www.chrismytton.com/2020/09/24/consume-less-produce-more/">
      
&lt;p&gt;If you have too many inputs then your brain gets overwhelmed. Every piece of information you consume takes up some brain cycles.&lt;/p&gt;

&lt;p&gt;If you’re not producing enough output to match your inputs then it can get clogged up in your brain. You end up with too many strands of thought. Too many lines of enquiry.&lt;/p&gt;

&lt;h2 id=&quot;excess-consumption-causes-anxiety&quot;&gt;Excess consumption causes anxiety&lt;/h2&gt;

&lt;p&gt;This can often be a cause of anxiety, stress and depression. Just increasing the amount you produce allows your brain to work through your anxieties.&lt;/p&gt;

&lt;p&gt;Perhaps this is why mental health issues are on the rise. There are just so many inputs for our brain in the modern world that we don’t have time to process them all into coherent outputs, so that we can understand the information we’re being presented with.&lt;/p&gt;

&lt;h2 id=&quot;reduce-consumption&quot;&gt;Reduce consumption&lt;/h2&gt;

&lt;p&gt;Reduce the number of inputs in your daily life.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Stop reading the news&lt;/li&gt;
  &lt;li&gt;Spend less time on social media&lt;/li&gt;
  &lt;li&gt;Reduce the number of websites you visit daily&lt;/li&gt;
  &lt;li&gt;Delete unused apps from your phone&lt;/li&gt;
  &lt;li&gt;Eliminate unnecessary calendar appointments&lt;/li&gt;
  &lt;li&gt;Spend less time watching TV series&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Generally stimulate your brain less.&lt;/p&gt;

&lt;h2 id=&quot;increase-production&quot;&gt;Increase production&lt;/h2&gt;

&lt;p&gt;Increase the number of productive outputs in your life.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create something with your hands&lt;/li&gt;
  &lt;li&gt;Draw or paint pictures (doesn’t matter if you’re good or not)&lt;/li&gt;
  &lt;li&gt;Write more, keep a journal or a blog&lt;/li&gt;
  &lt;li&gt;Increase your daily step count&lt;/li&gt;
  &lt;li&gt;Explore new places&lt;/li&gt;
  &lt;li&gt;Exercise regularly&lt;/li&gt;
  &lt;li&gt;Cook for yourself, rather than eating out&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are things that allow you to express yourself. Express the ideas in your brain. Work through the inputs in your life.&lt;/p&gt;

&lt;p&gt;Not everything has to have a point, sometimes you just need to &lt;a href=&quot;/2019/09/24/do-things-for-fun/&quot;&gt;do things for fun&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/chelt-paint-fest-2020.jpg&quot; alt=&quot;Cheltenham Paint Festival 2020 at Cheltenham Spa station&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;express-yourself&quot;&gt;Express yourself&lt;/h2&gt;

&lt;p&gt;It’s by expressing the ideas in your brain that you can actually think clearly. Because the more you express them the more you can see them. Then you can visualise the ideas. Then you can better structure and organise them and compartmentalize them.&lt;/p&gt;

&lt;p&gt;Now stop consuming these words and go and produce something. Express yourself.&lt;/p&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="life" />
    
    <category term="creativity" />
    
    <summary type="html">Expressing yourself through creative outputs helps balance out the anxiety caused by the modern information economy.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com/assets/images/chelt-paint-fest-2020.jpg" />
    <media:content medium="image" url="https://www.chrismytton.com/assets/images/chelt-paint-fest-2020.jpg"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Canvas art in TypeScript</title>
    <link href="https://www.chrismytton.com/2020/06/06/canvas-art-in-typescript/" rel="alternate" type="text/html" title="Canvas art in TypeScript" />
    <published>2020-06-06T15:30:00+00:00</published>
    <updated>2020-06-06T15:30:00+00:00</updated>
    <id>https://www.chrismytton.com/2020/06/06/canvas-art-in-typescript/</id>
    <content type="html" xml:base="https://www.chrismytton.com/2020/06/06/canvas-art-in-typescript/">
      
&lt;p&gt;I ported a JavaScript “random art generator” I created a few years ago over to TypeScript. This post contains some notes from the process.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;See the project: &lt;a href=&quot;https://www.chrismytton.com/art/&quot;&gt;www.chrismytton.com/art&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out the code: &lt;a href=&quot;https://github.com/chrismytton/art/blob/1f34e99d121f2c7dd698eb8c9d45da1e9b7f450c/src/random.ts&quot;&gt;chrismytton/art on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;I’ve been learning TypeScript recently. As part of that I wanted to dig out some of my old JavaScript projects and port them to TypeScript. I find porting code to a new language is a good way to learn.&lt;/p&gt;

&lt;p&gt;I found an old project that I created in 2014 which uses JavaScript and the Canvas API to create random pieces of art which change on every page load. The code itself is fairly straightforward, so it seemed like a good candidate for porting to TypeScript.&lt;/p&gt;

&lt;h2 id=&quot;classes-in-typescript&quot;&gt;Classes in TypeScript&lt;/h2&gt;

&lt;p&gt;TypeScript classes build on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;ES6 classes&lt;/a&gt;. The major difference is that in TypeScript you need to explicitly declare the types of properties you’re expecting on the class.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanvasPainting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTMLCanvasElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CanvasRenderingContext2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you try to use &lt;code&gt;this.viewport&lt;/code&gt; without declaring the property TypeScript will tell you:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Property ‘viewport’ does not exist on type ‘CanvasPainting’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I find having these properties explicitly defined actually makes it easier to figure out what the class might be doing internally. They provide useful documentation about what kind of data you can expect to find in each property.&lt;/p&gt;

&lt;h2 id=&quot;index-signatures&quot;&gt;Index signatures&lt;/h2&gt;

&lt;p&gt;This is something I struggled with for a while. I was trying to dynamically call methods on my &lt;code&gt;Shapes&lt;/code&gt; class using &lt;code&gt;this[shape]&lt;/code&gt;, but TypeScript was giving this warning:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Element implicitly has an ‘any’ type because expression of type ‘string’ can’t be used to index type ‘Shapes’.&lt;/p&gt;

  &lt;p&gt;No index signature with a parameter of type ‘string’ was found on type ‘Shapes’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After reading various bits of the TypeScript documentation and some Stack Overflow answers I eventually figured out that I needed to define an index signature on my shapes class. This tells TypeScript what can be used to index this class, and what the indexing might return.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Shapes&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanvasPainting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells TypeScript that you can index this class with a string, and it will return &lt;em&gt;something&lt;/em&gt;. There might be a way to avoid using &lt;code&gt;any&lt;/code&gt; here, but I haven’t figured that out yet.&lt;/p&gt;

&lt;h2 id=&quot;dealing-with-null-values&quot;&gt;Dealing with null values&lt;/h2&gt;

&lt;p&gt;TypeScript knows which methods can return &lt;code&gt;null&lt;/code&gt; and will make you deal with those cases. If you try to call a method on a value that might be null then TypeScript will give you a warning.&lt;/p&gt;

&lt;p&gt;You can avoid this warning by explicitly checking for &lt;code&gt;null&lt;/code&gt; before using the value.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CanvasPainting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTMLCanvasElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CanvasRenderingContext2D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HTMLCanvasElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;2d&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// getContext can return null, so check for that case.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;getContext(&#39;2d&#39;) failed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Without this check for &lt;code&gt;null&lt;/code&gt; TypeScript warns you that &lt;code&gt;Type &#39;null&#39; is not assignable to type &#39;CanvasRenderingContext2D&#39;.&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s easy to forget to check for &lt;code&gt;null&lt;/code&gt; when writing JavaScript. TypeScript protects you from this class of error at the compile stage.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;I really like what I’ve seen so far with TypeScript. Working on little projects like this is a great way to get some experience with new tools.&lt;/p&gt;

&lt;p&gt;I’d forgotten all about this fun little art project. It’s nice to have given it a bit of polish and released it into the world, rather than it gathering dust on my hard drive.&lt;/p&gt;

&lt;p&gt;See the project: &lt;a href=&quot;https://www.chrismytton.com/art/&quot;&gt;www.chrismytton.com/art&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Check out the code: &lt;a href=&quot;https://github.com/chrismytton/art/blob/1f34e99d121f2c7dd698eb8c9d45da1e9b7f450c/src/random.ts&quot;&gt;chrismytton/art on GitHub&lt;/a&gt;.&lt;/p&gt;


    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="programming" />
    
    <summary type="html">📝 Notes from porting a JavaScript random art generator to TypeScript.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com/assets/images/random-art.png" />
    <media:content medium="image" url="https://www.chrismytton.com/assets/images/random-art.png"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
  <entry>
    <title type="html">Extracting a list of IDs from an XLSX file</title>
    <link href="https://www.chrismytton.com/2020/05/06/extracting-ids-from-xlsx/" rel="alternate" type="text/html" title="Extracting a list of IDs from an XLSX file" />
    <published>2020-05-06T06:32:25+00:00</published>
    <updated>2020-05-06T06:32:25+00:00</updated>
    <id>https://www.chrismytton.com/2020/05/06/extracting-ids-from-xlsx/</id>
    <content type="html" xml:base="https://www.chrismytton.com/2020/05/06/extracting-ids-from-xlsx/">
      
&lt;p&gt;I needed to convert a Microsoft Excel XLSX file containing an ID column into a comma-separated list of those IDs for passing to a command line tool.&lt;/p&gt;

&lt;p&gt;In the end it was quite straightforward with the help of &lt;a href=&quot;https://csvkit.readthedocs.io/en/latest/&quot;&gt;csvkit&lt;/a&gt; and a sprinkle of UNIX.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;in2csv reports.xlsx |
  csvcut -c 1 |
  sed &#39;1d&#39; |
  paste -sd , -
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;To convert from XLSX to CSV format you can use the handy &lt;a href=&quot;https://csvkit.readthedocs.io/en/latest/scripts/in2csv.html&quot;&gt;&lt;code&gt;in2csv&lt;/code&gt;&lt;/a&gt; utility from csvkit, which automatically detects the type of input file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;in2csv reports.xlsx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The ID column is in the first column of the CSV. The &lt;a href=&quot;https://csvkit.readthedocs.io/en/latest/scripts/csvcut.html&quot;&gt;&lt;code&gt;csvcut&lt;/code&gt;&lt;/a&gt; utility from csvkit can be used to extract one or more columns from a CSV. You can also pass the column header name to the &lt;code&gt;-c&lt;/code&gt; argument, instead of a number.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;csvcut -c 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output now contains a single column of data from the CSV, but it still has the header. That can be removed with the help of &lt;code&gt;sed&lt;/code&gt;’s delete function.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sed &#39;1d&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The IDs are now one-per-line, so the final step is to join them together onto a single line with &lt;code&gt;paste&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;paste -sd , -
&lt;/code&gt;&lt;/pre&gt;

    </content>
    <author>
      <name>Chris Mytton</name>
    </author>
    
    <category term="programming" />
    
    <summary type="html">Using csvkit and UNIX to extract a list of IDs from an XLSX file.</summary>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.chrismytton.com" />
    <media:content medium="image" url="https://www.chrismytton.com"
      xmlns:media="http://search.yahoo.com/mrss/" />
  </entry>
  
</feed>
